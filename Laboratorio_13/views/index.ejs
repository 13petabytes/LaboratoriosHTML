  <%- include('includes/_header.ejs') %>
  <style>
    img {
      width: 25%; /* 3/4 del tamaño original */
      height: auto; /* Mantiene la proporción */
    }
  </style>
  
  <img src="Yu-Gi-Oh21_Duel_Links.jpg" alt="imagen inicio">

  <div>
    <h2>Ventajas de escribir el código SQL únicamente en la capa del modelo</h2>
    <h3>Mejor separación de responsabilidades</h3>
    <p>El código SQL queda centralizado en el modelo, lo que permite que los controladores y vistas se centren en la lógica de presentación y negocio, respectivamente.</p>
    <h3>Mantener la coherencia en la estructura de datos</h3>
    <p>Al definir las consultas en el modelo, se garantiza que toda la aplicación interactúe de la misma manera con la base de datos.</p>
    <h3>Mayor facilidad para modificar la base de datos</h3>
    <p>Cualquier cambio en la estructura de las consultas solo debe hacerse en el modelo, lo que facilita su mantenimiento y mejora la escalabilidad del sistema.</p>
    
    <h2>¿Qué es SQL injection y cómo se puede prevenir?</h2>
    <h3>Definición de SQL Injection</h3>
    <p>SQL Injection es una técnica de ataque en la que un atacante inserta o "inyecta" código SQL malicioso en una consulta, lo que puede permitirle acceder, modificar o eliminar datos de la base de datos.</p>
    <h3>Cómo prevenir SQL Injection</h3>

</div>

    <%- include('includes/_footer.ejs') %>
    <script src="./public/introjs.js"></script>
    